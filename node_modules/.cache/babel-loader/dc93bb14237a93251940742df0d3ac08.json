{"ast":null,"code":"import baseurl from \"./constants\";\nexport default function fetchData(filter, activeIndex, fn, token, tag) {\n  let Tag = tag ? tag : \"\";\n  let Filter = filter ? filter : \"\";\n  fetch(`${baseurl}/api/articles?${Tag}limit=5&offset=${activeIndex * 10}${Filter}`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      authorization: token\n    }\n  }).then(res => {\n    if (!res.ok) {\n      throw new Error(res.statusText);\n    }\n    return res.json();\n  }).then(data => {\n    if (data.articles) {\n      fn(\"articles\", data.articles);\n      fn(\"error\", null);\n    } else {\n      fn(\"error\", data);\n    }\n  }).catch(err => {\n    fn(\"error\", \"not able to fetch data\");\n  });\n  fetch(`${baseurl}/api/articles?${Tag}${Filter}`).then(res => {\n    if (!res.ok) {\n      throw new Error(res.statusText);\n    }\n    return res.json();\n  }).then(articles => {\n    fn(\"articlesCount\", articles.articles.length);\n  });\n}","map":{"version":3,"names":["baseurl","fetchData","filter","activeIndex","fn","token","tag","Tag","Filter","fetch","method","headers","authorization","then","res","ok","Error","statusText","json","data","articles","catch","err","length"],"sources":["/home/venkataravindrapv/blog-app-master/src/utils/fetchData.js"],"sourcesContent":["import baseurl from \"./constants\";\n\nexport default function fetchData(filter, activeIndex, fn, token, tag) {\n  let Tag = tag ? tag : \"\";\n  let Filter = filter ? filter : \"\";\n\n  fetch(\n    `${baseurl}/api/articles?${Tag}limit=5&offset=${activeIndex * 10}${Filter}`,\n    {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: token,\n      },\n    }\n  )\n    .then((res) => {\n      if (!res.ok) {\n        throw new Error(res.statusText);\n      }\n      return res.json();\n    })\n    .then((data) => {\n      if (data.articles) {\n        fn(\"articles\", data.articles);\n        fn(\"error\", null);\n      } else {\n        fn(\"error\", data);\n      }\n    })\n    .catch((err) => {\n      fn(\"error\", \"not able to fetch data\");\n    });\n  fetch(`${baseurl}/api/articles?${Tag}${Filter}`)\n    .then((res) => {\n      if (!res.ok) {\n        throw new Error(res.statusText);\n      }\n      return res.json();\n    })\n    .then((articles) => {\n      fn(\"articlesCount\", articles.articles.length);\n    });\n}\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,aAAa;AAEjC,eAAe,SAASC,SAAS,CAACC,MAAM,EAAEC,WAAW,EAAEC,EAAE,EAAEC,KAAK,EAAEC,GAAG,EAAE;EACrE,IAAIC,GAAG,GAAGD,GAAG,GAAGA,GAAG,GAAG,EAAE;EACxB,IAAIE,MAAM,GAAGN,MAAM,GAAGA,MAAM,GAAG,EAAE;EAEjCO,KAAK,CACF,GAAET,OAAQ,iBAAgBO,GAAI,kBAAiBJ,WAAW,GAAG,EAAG,GAAEK,MAAO,EAAC,EAC3E;IACEE,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCC,aAAa,EAAEP;IACjB;EACF,CAAC,CACF,CACEQ,IAAI,CAAEC,GAAG,IAAK;IACb,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;MACX,MAAM,IAAIC,KAAK,CAACF,GAAG,CAACG,UAAU,CAAC;IACjC;IACA,OAAOH,GAAG,CAACI,IAAI,EAAE;EACnB,CAAC,CAAC,CACDL,IAAI,CAAEM,IAAI,IAAK;IACd,IAAIA,IAAI,CAACC,QAAQ,EAAE;MACjBhB,EAAE,CAAC,UAAU,EAAEe,IAAI,CAACC,QAAQ,CAAC;MAC7BhB,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC;IACnB,CAAC,MAAM;MACLA,EAAE,CAAC,OAAO,EAAEe,IAAI,CAAC;IACnB;EACF,CAAC,CAAC,CACDE,KAAK,CAAEC,GAAG,IAAK;IACdlB,EAAE,CAAC,OAAO,EAAE,wBAAwB,CAAC;EACvC,CAAC,CAAC;EACJK,KAAK,CAAE,GAAET,OAAQ,iBAAgBO,GAAI,GAAEC,MAAO,EAAC,CAAC,CAC7CK,IAAI,CAAEC,GAAG,IAAK;IACb,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;MACX,MAAM,IAAIC,KAAK,CAACF,GAAG,CAACG,UAAU,CAAC;IACjC;IACA,OAAOH,GAAG,CAACI,IAAI,EAAE;EACnB,CAAC,CAAC,CACDL,IAAI,CAAEO,QAAQ,IAAK;IAClBhB,EAAE,CAAC,eAAe,EAAEgB,QAAQ,CAACA,QAAQ,CAACG,MAAM,CAAC;EAC/C,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module"}