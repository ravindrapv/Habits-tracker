{"ast":null,"code":"// import React from \"react\";\n// import { NavLink } from \"react-router-dom\";\n// import baseurl from \"../utils/constants\";\n// let commentUrl;\n\n// export default class Comment extends React.Component {\n//   constructor(props) {\n//     super();\n//     this.state = {\n//       comment: \"\",\n//       error: \"\",\n//       comments: [],\n//     };\n//   }\n//   handleInput = ({ target }) => {\n//     let { name, value } = target;\n//     this.setState({\n//       [name]: value,\n//     });\n//   };\n//   checkInput = () => {\n//     let { comment } = this.state;\n//     if (!comment) {\n//       this.setState({\n//         error: \"comment required to add*\",\n//       });\n//     }\n//   };\n//   componentDidMount() {\n//     commentUrl = `${baseurl}/api/articles/${this.props.slug}/comments`;\n//     this.fetchComments();\n//   }\n//   addComment = () => {\n//     let { comment } = this.state;\n//     fetch(commentUrl, {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         authorization: `${this.props.user.token}`,\n//       },\n//       body: JSON.stringify({\n//         comment: {\n//           body: comment,\n//         },\n//       }),\n//     })\n//       .then((res) => {\n//         if (!res.ok) {\n//           throw new Error(\"cant add new comment\");\n//         }\n//         return res.json();\n//       })\n//       .then((comment) => {\n//         this.setState(\n//           {\n//             comment: \"\",\n//           },\n//           () => {\n//             this.fetchComments();\n//           }\n//         );\n//       })\n//       .catch((errors) => {\n//         this.setState({\n//           error: errors.error,\n//         });\n//       });\n//   };\n//   fetchComments = () => {\n//     fetch(commentUrl)\n//       .then((res) => {\n//         if (!res.ok) {\n//           throw new Error(\"cant fetch comments\");\n//         }\n//         return res.json();\n//       })\n//       .then((comments) => {\n//         this.setState({\n//           comments: comments.comments,\n//         });\n//       })\n//       .catch((errors) => {\n//         this.setState({\n//           error: errors.error,\n//         });\n//       });\n//   };\n//   deleteComment = (id) => {\n//     fetch(`${commentUrl}/${id}`, {\n//       method: \"DELETE\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         authorization: `${this.props.user.token}`,\n//       },\n//     })\n//       .then((res) => {\n//         if (!res.ok) {\n//           throw new Error(\"can't delete comment\");\n//         }\n//         return res.json();\n//       })\n//       .then((data) => {\n//         this.setState(\n//           {\n//             comments: [],\n//           },\n//           () => {\n//             this.fetchComments();\n//           }\n//         );\n//       })\n//       .catch((errors) => {\n//         this.setState({\n//           error: errors.error,\n//         });\n//       });\n//   };\n//   render() {\n//     let { comment, error } = this.state;\n//     let formControlClass =\n//       \"text-sm rounded-md w-full py-1 px-4 my-2 border-2 border-solid border-blue-900 text-blue-900\";\n\n//     return (\n//       <div className=\" w-1/3 mx-auto\">\n//         {this.props.user ? (\n//           <>\n//             <form\n//               onSubmit={(event) => {\n//                 event.preventDefault();\n//                 this.checkInput();\n//                 if (!error) {\n//                   this.addComment();\n//                 }\n//               }}\n//             >\n//               <span className=\"text-red-500 text-sm\">{this.state.error}</span>\n//               <textarea\n//                 className={formControlClass}\n//                 placeholder=\"Write comment\"\n//                 rows={3}\n//                 onChange={this.handleInput}\n//                 value={comment}\n//                 name=\"comment\"\n//               ></textarea>\n//               <input\n//                 type=\"submit\"\n//                 value=\"Add Comment\"\n//                 className={`bg-blue-300 hover:scale-110 blue ${formControlClass}`}\n//               ></input>\n//             </form>\n//           </>\n//         ) : (\n//           <NavLink to={\"/login\"}>\n//             <p className=\"text-base m-4 text-center\">\n//               <span className=\"text-green-500\">SignIn/SignUp</span> to add\n//               <span className=\"blue\"> Comment</span>\n//             </p>\n//           </NavLink>\n//         )}\n//         <div>\n//           <h4 className=\"blue text-lg m-4 text-center\">Comments</h4>\n//           {this.state.comments.map((comment, i) => {\n//             return (\n//               <SingleComment\n//                 deleteComment={this.deleteComment}\n//                 user={this.props.user}\n//                 key={i}\n//                 comment={comment}\n//               />\n//             );\n//           })}\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// function SingleComment(props) {\n//   return (\n//     <div className=\"my-3 comment flex justify-between items-center\">\n//       <div>\n//         <p className=\"blue text-base\">{props.comment.body}</p>\n//         <address className=\"text-xs capitalize\">\n//           {props.comment.author.username}\n//         </address>\n//         <span className=\"text-xs -mt-4\">\n//           {props.comment.createdAt.slice(0, 10)}\n//         </span>\n//       </div>\n//       {props.user && props.user.username === props.comment.author.username ? (\n//         <button\n//           onClick={() => {\n//             props.deleteComment(props.comment.id);\n//           }}\n//           className=\"text-red-500 text-xs hover:scale-125\"\n//         >\n//           <i className=\"fa-solid fa-trash\"></i>\n//         </button>\n//       ) : (\n//         \"\"\n//       )}\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["/home/venkataravindrapv/blog-app-master/src/components/comment.js"],"sourcesContent":["// import React from \"react\";\n// import { NavLink } from \"react-router-dom\";\n// import baseurl from \"../utils/constants\";\n// let commentUrl;\n\n// export default class Comment extends React.Component {\n//   constructor(props) {\n//     super();\n//     this.state = {\n//       comment: \"\",\n//       error: \"\",\n//       comments: [],\n//     };\n//   }\n//   handleInput = ({ target }) => {\n//     let { name, value } = target;\n//     this.setState({\n//       [name]: value,\n//     });\n//   };\n//   checkInput = () => {\n//     let { comment } = this.state;\n//     if (!comment) {\n//       this.setState({\n//         error: \"comment required to add*\",\n//       });\n//     }\n//   };\n//   componentDidMount() {\n//     commentUrl = `${baseurl}/api/articles/${this.props.slug}/comments`;\n//     this.fetchComments();\n//   }\n//   addComment = () => {\n//     let { comment } = this.state;\n//     fetch(commentUrl, {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         authorization: `${this.props.user.token}`,\n//       },\n//       body: JSON.stringify({\n//         comment: {\n//           body: comment,\n//         },\n//       }),\n//     })\n//       .then((res) => {\n//         if (!res.ok) {\n//           throw new Error(\"cant add new comment\");\n//         }\n//         return res.json();\n//       })\n//       .then((comment) => {\n//         this.setState(\n//           {\n//             comment: \"\",\n//           },\n//           () => {\n//             this.fetchComments();\n//           }\n//         );\n//       })\n//       .catch((errors) => {\n//         this.setState({\n//           error: errors.error,\n//         });\n//       });\n//   };\n//   fetchComments = () => {\n//     fetch(commentUrl)\n//       .then((res) => {\n//         if (!res.ok) {\n//           throw new Error(\"cant fetch comments\");\n//         }\n//         return res.json();\n//       })\n//       .then((comments) => {\n//         this.setState({\n//           comments: comments.comments,\n//         });\n//       })\n//       .catch((errors) => {\n//         this.setState({\n//           error: errors.error,\n//         });\n//       });\n//   };\n//   deleteComment = (id) => {\n//     fetch(`${commentUrl}/${id}`, {\n//       method: \"DELETE\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         authorization: `${this.props.user.token}`,\n//       },\n//     })\n//       .then((res) => {\n//         if (!res.ok) {\n//           throw new Error(\"can't delete comment\");\n//         }\n//         return res.json();\n//       })\n//       .then((data) => {\n//         this.setState(\n//           {\n//             comments: [],\n//           },\n//           () => {\n//             this.fetchComments();\n//           }\n//         );\n//       })\n//       .catch((errors) => {\n//         this.setState({\n//           error: errors.error,\n//         });\n//       });\n//   };\n//   render() {\n//     let { comment, error } = this.state;\n//     let formControlClass =\n//       \"text-sm rounded-md w-full py-1 px-4 my-2 border-2 border-solid border-blue-900 text-blue-900\";\n\n//     return (\n//       <div className=\" w-1/3 mx-auto\">\n//         {this.props.user ? (\n//           <>\n//             <form\n//               onSubmit={(event) => {\n//                 event.preventDefault();\n//                 this.checkInput();\n//                 if (!error) {\n//                   this.addComment();\n//                 }\n//               }}\n//             >\n//               <span className=\"text-red-500 text-sm\">{this.state.error}</span>\n//               <textarea\n//                 className={formControlClass}\n//                 placeholder=\"Write comment\"\n//                 rows={3}\n//                 onChange={this.handleInput}\n//                 value={comment}\n//                 name=\"comment\"\n//               ></textarea>\n//               <input\n//                 type=\"submit\"\n//                 value=\"Add Comment\"\n//                 className={`bg-blue-300 hover:scale-110 blue ${formControlClass}`}\n//               ></input>\n//             </form>\n//           </>\n//         ) : (\n//           <NavLink to={\"/login\"}>\n//             <p className=\"text-base m-4 text-center\">\n//               <span className=\"text-green-500\">SignIn/SignUp</span> to add\n//               <span className=\"blue\"> Comment</span>\n//             </p>\n//           </NavLink>\n//         )}\n//         <div>\n//           <h4 className=\"blue text-lg m-4 text-center\">Comments</h4>\n//           {this.state.comments.map((comment, i) => {\n//             return (\n//               <SingleComment\n//                 deleteComment={this.deleteComment}\n//                 user={this.props.user}\n//                 key={i}\n//                 comment={comment}\n//               />\n//             );\n//           })}\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// function SingleComment(props) {\n//   return (\n//     <div className=\"my-3 comment flex justify-between items-center\">\n//       <div>\n//         <p className=\"blue text-base\">{props.comment.body}</p>\n//         <address className=\"text-xs capitalize\">\n//           {props.comment.author.username}\n//         </address>\n//         <span className=\"text-xs -mt-4\">\n//           {props.comment.createdAt.slice(0, 10)}\n//         </span>\n//       </div>\n//       {props.user && props.user.username === props.comment.author.username ? (\n//         <button\n//           onClick={() => {\n//             props.deleteComment(props.comment.id);\n//           }}\n//           className=\"text-red-500 text-xs hover:scale-125\"\n//         >\n//           <i className=\"fa-solid fa-trash\"></i>\n//         </button>\n//       ) : (\n//         \"\"\n//       )}\n//     </div>\n//   );\n// }\n"],"mappings},"metadata":{},"sourceType":"module"}